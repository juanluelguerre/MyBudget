// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBudget.Api.Application.Customers.Data;

namespace MyBudget.Api.Application.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190616210618_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("CustomerFrom");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = (byte)1,
                            CustomerFrom = new DateTime(2019, 6, 16, 23, 6, 18, 49, DateTimeKind.Local).AddTicks(6689),
                            FirstName = "Juan Luis",
                            LastName = "Guerrero Minero"
                        },
                        new
                        {
                            Id = 2,
                            Active = (byte)1,
                            CustomerFrom = new DateTime(2019, 5, 17, 23, 6, 18, 62, DateTimeKind.Local).AddTicks(4186),
                            FirstName = "Francisco",
                            LastName = "Ruiz Vázquez"
                        },
                        new
                        {
                            Id = 3,
                            Active = (byte)1,
                            CustomerFrom = new DateTime(2019, 4, 27, 23, 6, 18, 62, DateTimeKind.Local).AddTicks(4303),
                            FirstName = "Eva",
                            LastName = "Perez Moreno"
                        },
                        new
                        {
                            Id = 4,
                            Active = (byte)1,
                            CustomerFrom = new DateTime(2019, 6, 16, 23, 6, 18, 62, DateTimeKind.Local).AddTicks(4310),
                            FirstName = "Maria",
                            LastName = "Serrano Sanchez"
                        });
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.CustomerAccount", b =>
                {
                    b.Property<int>("CustomerId");

                    b.Property<string>("BankAccount");

                    b.Property<byte>("MarkAsDefault")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("CustomerId", "BankAccount");

                    b.HasAlternateKey("BankAccount");

                    b.ToTable("CustomersAccounts");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            BankAccount = "ES12-1234-1234-12345678-1234",
                            MarkAsDefault = (byte)1
                        },
                        new
                        {
                            CustomerId = 1,
                            BankAccount = "ES13-4321-4321-12345678-4321",
                            MarkAsDefault = (byte)0
                        });
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.CustomerAccount", b =>
                {
                    b.HasOne("MyBudget.Api.Application.Customers.Domain.Aggregates.Customer")
                        .WithMany("BankAccounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
