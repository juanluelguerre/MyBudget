// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBudget.Api.Application.Customers.Data;

namespace MyBudget.Api.Application.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.CustomerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BankAccount")
                        .IsRequired();

                    b.Property<int?>("CustomerId");

                    b.Property<bool>("MarkAsDefault");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAccounts");
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.Customer", b =>
                {
                    b.HasBaseType("MyBudget.Api.Application.Customers.Domain.Aggregates.Person");

                    b.Property<bool>("Active");

                    b.Property<string>("BankAccount");

                    b.Property<DateTime?>("CustomerFrom");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.ToTable("Customers");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("MyBudget.Api.Application.Customers.Domain.Aggregates.CustomerAccount", b =>
                {
                    b.HasOne("MyBudget.Api.Application.Customers.Domain.Aggregates.Customer")
                        .WithMany("BankAccounts")
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
